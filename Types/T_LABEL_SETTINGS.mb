'*******************************************************************************
'** 	Created By Peter Horsbøll Møller, Pitney Bowes Business Insight
'** 	Program:
'** 	Modul:
'**
'*******************************************************************************

'-------------------------------------
Include "MapBasic.def"
Include "Icons.def"
Include "Menu.def"
'**default constants...
Include "..\Defaults.def"

'-------------------------------------
Include "..\COLUMNLib.def"
Include "..\DEBUGLib.def"
Include "..\ERRORLib.def"
Include "..\STRINGLib.def"
Include "..\STYLELib.def"

Include "T_LABEL_SETTINGS.def"

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes MapInfo
'Parameters:
'
'**********************************************************************************************''
Sub tlbsCopy(tlbsFrom As T_LABEL_SETTINGS, tlbsTo As T_LABEL_SETTINGS)

Dim	i As Integer

OnError GoTo ErrorOccured

'Define LAYER_INFO_LBL_EXPR                      15	sExpression		'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_LT                        16	nLineType			'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_FONT                      18	fntLabel			'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_POS                       20	nPosition			'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_VISIBILITY                25	nVisibility		'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_ZOOM_MIN                  26	fMinZoom			'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_ZOOM_MAX                  27	fMaxZoom			'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_AUTODISPLAY               28	bAutoDisplay		'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_OVERLAP                   29	bAllowOverlap		'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_DUPLICATES                30	bAllowDuplicates	'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_OFFSET                    31	nOffset			'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_MAX                       32	nMaxNumber		'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_PARTIALSEGS               33	bPartialSegments	'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_ORIENTATION               38	nOrientation		'T_LABEL_SETTINGS
'Define LAYER_INFO_LABEL_ALPHA                   41	nAlpha			'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_AUTO_POSITION             54	bAutoPosition		'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_AUTO_SIZES                55	bAutoSizes		'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_SUPPRESS_IF_NO_FIT        56	bSuppressIfNotFit	'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_AUTO_SIZE_STEP            57	nAutoSizeStes		'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_CURVED_BEST_POSITION      58	bCurvedBestPostion	'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_CURVED_FALLBACK           59	bCurvedFallback	'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_USE_ABBREVIATION          60	bUseAbbreviation	'T_LABEL_SETTINGS
'Define LAYER_INFO_ABBREVIATION_EXPR             61	sAbbreviationExpr	'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_AUTO_CALLOUT              62	bAutoCallOut		'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_ORDER                     63	nLabelOrder		'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_PARALLEL                  19	'Don't read/write, controlled by nOrientation
'Define LAYER_INFO_LBL_CURFONT			    17	'Don't read/write, MapBasic 3.0 only
'Define LAYER_INFO_LABEL_POS_RETRY			    74 	bPositionRetry		'T_LABEL_SETTINGS
'Define LAYER_INFO_LBL_LINE_PEN			    79	penLine			'T_LABEL_SETTINGS
'Define LAYER_INFO_LABEL_EXPR_TABLE		    84	'Don't read/write, Seamless layers
'Define LAYER_INFO_LBL_CURVED_PERCENT_OVER	    85	nCurvedPercentOver	'T_LABEL_SETTINGS

	tlbsTo.bAutoDisplay			= tlbsFrom.bAutoDisplay
	tlbsTo.nVisibility			= tlbsFrom.nVisibility
	tlbsTo.fMinZoom			= tlbsFrom.fMinZoom
	tlbsTo.fMaxZoom			= tlbsFrom.fMaxZoom
	tlbsTo.sZoomUnits			= tlbsFrom.sZoomUnits
	tlbsTo.sExpression			= tlbsFrom.sExpression
	tlbsTo.nLineType			= tlbsFrom.nLineType
	tlbsTo.fntLabel			= tlbsFrom.fntLabel
	tlbsTo.nPosition			= tlbsFrom.nPosition
	tlbsTo.bAllowOverlap		= tlbsFrom.bAllowOverlap
	tlbsTo.bAllowDuplicates		= tlbsFrom.bAllowDuplicates
	tlbsTo.nOffset				= tlbsFrom.nOffset
	tlbsTo.nMaxNumber			= tlbsFrom.nMaxNumber
	tlbsTo.bPartialSegments		= tlbsFrom.bPartialSegments
	tlbsTo.nOrientation			= tlbsFrom.nOrientation
	tlbsTo.nAlpha				= tlbsFrom.nAlpha
	tlbsTo.bAutoPosition		= tlbsFrom.bAutoPosition
	tlbsTo.bAutoSizes			= tlbsFrom.bAutoSizes
	tlbsTo.bSuppressIfNotFit		= tlbsFrom.bSuppressIfNotFit
	tlbsTo.nAutoSizeStes		= tlbsFrom.nAutoSizeStes
	tlbsTo.bCurvedBestPostion	= tlbsFrom.bCurvedBestPostion
	tlbsTo.bCurvedFallback		= tlbsFrom.bCurvedFallback
	tlbsTo.bUseAbbreviation		= tlbsFrom.bUseAbbreviation
	tlbsTo.sAbbreviationExpr		= tlbsFrom.sAbbreviationExpr
	tlbsTo.bAutoCallOut			= tlbsFrom.bAutoCallOut
	tlbsTo.nLabelOrder			= tlbsFrom.nLabelOrder

	tlbsTo.bPositionRetry		= tlbsFrom.bPositionRetry
	tlbsTo.penLine				= tlbsFrom.penLine
	tlbsTo.nCurvedPercentOver	= tlbsFrom.nCurvedPercentOver

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "tlbsCopy")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Business Insight
'Parameters:
'
'**********************************************************************************************''
Sub tlbsReset(	tlbs As T_LABEL_SETTINGS	'T_LABEL_SETTINGS to reset
			)

OnError GoTo ErrorOccured

	tlbs.bAutoDisplay		= FALSE
	tlbs.nVisibility		= LAYER_INFO_LBL_VIS_ON 	'| LAYER_INFO_LBL_VIS_OFF | LAYER_INFO_LBL_VIS_ZOOM
	tlbs.fMinZoom			= 0
	tlbs.fMaxZoom			= 30000
	tlbs.sZoomUnits		= "m"
	tlbs.sExpression		= "COL1"
	tlbs.nLineType			= LAYER_INFO_LBL_LT_NONE '| LAYER_INFO_LBL_LT_SIMPLE | LAYER_INFO_LBL_LT_ARROW
	tlbs.fntLabel			= CurrentFont()
	tlbs.nPosition			= LAYER_INFO_LBL_POS_CR 	' | _TL | _TC | _TR | _CL | _CC | _BL | _BC | _BR
	tlbs.bAllowOverlap		= FALSE
	tlbs.bAllowDuplicates	= TRUE
	tlbs.nOffset			= 8
	tlbs.nMaxNumber		= 2147483647
	tlbs.bPartialSegments	= TRUE
	tlbs.nOrientation		= LAYER_INFO_LABEL_ORIENT_HORIZONTAL	'LAYER_INFO_LABEL_ORIENT_PARALLEL | LAYER_INFO_LABEL_ORIENT_CURVED
	tlbs.nAlpha			= 255
	tlbs.bAutoPosition		= FALSE
	tlbs.bAutoSizes		= FALSE
	tlbs.bSuppressIfNotFit	= FALSE
	tlbs.nAutoSizeStes		= 2
	tlbs.bCurvedBestPostion	= FALSE
	tlbs.bCurvedFallback	= FALSE
	tlbs.bUseAbbreviation	= FALSE
	tlbs.sAbbreviationExpr	= ""
	tlbs.bAutoCallOut		= FALSE
	tlbs.nLabelOrder		= 0
	tlbs.bPositionRetry		= FALSE
	tlbs.penLine			= MakePen(1,2,BLACK)
	tlbs.nCurvedPercentOver	= 50	'Percent

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "tlbsReset")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes MapInfo
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function tlbsToString(tlbs As T_LABEL_SETTINGS) As String

Dim	sText As String

OnError GoTo ErrorOccured

	sText	= tlbs.bAutoDisplay
				& ";" & tlbs.nVisibility
				& ";" & Str$(tlbs.fMinZoom)
				& ";" & Str$(tlbs.fMaxZoom)
				& ";" & tlbs.sZoomUnits
				& ";" & tlbs.sExpression
				& ";" & tlbs.nLineType
				& ";" & STLFont2Text(tlbs.fntLabel)
				& ";" & tlbs.nPosition
				& ";" & tlbs.bAllowOverlap
				& ";" & tlbs.bAllowDuplicates
				& ";" & tlbs.nOffset
				& ";" & tlbs.nMaxNumber
				& ";" & tlbs.bPartialSegments
				& ";" & tlbs.nOrientation
				& ";" & tlbs.nAlpha
				& ";" & tlbs.bAutoPosition
				& ";" & tlbs.bAutoSizes
				& ";" & tlbs.bSuppressIfNotFit
				& ";" & tlbs.nAutoSizeStes
				& ";" & tlbs.bCurvedBestPostion
				& ";" & tlbs.bCurvedFallback
				& ";" & tlbs.bUseAbbreviation
				& ";" & tlbs.sAbbreviationExpr
				& ";" & tlbs.bAutoCallOut
				& ";" & tlbs.nLabelOrder
				& ";" & tlbs.bPositionRetry
				& ";" & STLPen2Text(tlbs.penLine)
				& ";" & tlbs.nCurvedPercentOver

	tlbsToString = sText

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "tlbsToString")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes MapInfo
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function tlbsFromString(tlbs As T_LABEL_SETTINGS, ByVal sLabelInfo As String) As Logical

Dim	arrItems() As String,
	nItems As Integer

OnError GoTo ErrorOccured

tlbsFromString	= FALSE

	nItems = STRINGSplit(sLabelInfo, ";", arrItems())
'	Call DEBUGPrint("tlbsFromString: " & nItems & " items in " & sLabelInfo)

	Call tlbsReset(tlbs)
	If nItems >= 16 Then
		tlbs.bAutoDisplay		= (arrItems(1) = "T")	'Val(arrItems(1))
		tlbs.nVisibility		= Val(arrItems(2))
		tlbs.fMinZoom			= Val(arrItems(3))
		tlbs.fMaxZoom			= Val(arrItems(4))
		tlbs.sZoomUnits		= arrItems(5)
		tlbs.sExpression		= arrItems(6)
		tlbs.nLineType			= Val(arrItems(7))
		tlbs.fntLabel			= STLText2Font(arrItems(8))
		tlbs.nPosition			= Val(arrItems(9))
		tlbs.bAllowOverlap		= (arrItems(10) = "T")
		tlbs.bAllowDuplicates	= (arrItems(11) = "T")
		tlbs.nOffset			= Val(arrItems(12))
		tlbs.nMaxNumber		= Val(arrItems(13))
		tlbs.bPartialSegments	= (arrItems(14) = "T")
		tlbs.nOrientation		= Val(arrItems(15))
		tlbs.nAlpha			= Val(arrItems(16))

		If nItems >= 26 Then
			tlbs.bAutoPosition		= (arrItems(17) = "T")
			tlbs.bAutoSizes		= (arrItems(18) = "T")
			tlbs.bSuppressIfNotFit	= (arrItems(19) = "T")
			tlbs.nAutoSizeStes		= Val(arrItems(20))
			tlbs.bCurvedBestPostion	= (arrItems(21) = "T")
			tlbs.bCurvedFallback	= (arrItems(22) = "T")
			tlbs.bUseAbbreviation	= (arrItems(23) = "T")
			tlbs.sAbbreviationExpr	= arrItems(24)
			tlbs.bAutoCallOut		= (arrItems(25) = "T")
			tlbs.nLabelOrder		= Val(arrItems(26))
		End If

		If nItems >= 29 Then
			tlbs.bPositionRetry		= (arrItems(27) = "T")
			tlbs.penLine			= STLText2Pen(arrItems(28))
			tlbs.nCurvedPercentOver	= Val(arrItems(29))
		End If

		tlbsFromString	= TRUE
	End If

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "tlbsToString")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes MapInfo
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function tlbsGetDescription(tlbs As T_LABEL_SETTINGS) As String

OnError GoTo ErrorOccured

	tlbsGetDescription = "Zoom: " & FormatNumber$(tlbs.fMinZoom) & " - " & FormatNumber$(tlbs.fMaxZoom) & " " & tlbs.sZoomUnits
	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "tlbsGetDescription")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes MapInfo
'Parameters:
'
'**********************************************************************************************''
Sub tlbsGetInfo(ByVal nMID As Integer, ByVal nLyrID As Integer, tlbs As T_LABEL_SETTINGS)

Dim	i, nStyles As Integer

OnError GoTo ErrorOccured

	Set Distance Units MapperInfo(nMID, MAPPER_INFO_DISTUNITS)

	tlbs.bAutoDisplay		= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_AUTODISPLAY)
	tlbs.nVisibility		= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_VISIBILITY)
	tlbs.fMinZoom			= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_ZOOM_MIN)
	tlbs.fMaxZoom			= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_ZOOM_MAX)
	tlbs.sZoomUnits		= MapperInfo(nMID, MAPPER_INFO_DISTUNITS)
	tlbs.sExpression		= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_EXPR)
	tlbs.nLineType			= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_LT)
	tlbs.fntLabel			= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_FONT)
	tlbs.nPosition			= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_POS)
	tlbs.bAllowOverlap		= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_OVERLAP)
	tlbs.bAllowDuplicates	= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_DUPLICATES)
	tlbs.nOffset			= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_OFFSET)
	tlbs.nMaxNumber		= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_MAX)
	tlbs.bPartialSegments	= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_PARTIALSEGS)
	tlbs.nOrientation		= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_ORIENTATION)
	tlbs.nAlpha			= LayerInfo(nMID, nLyrID, LAYER_INFO_LABEL_ALPHA)

	If SystemInfo(SYS_INFO_MIVERSION) >= 1200 Then
		tlbs.bAutoPosition		= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_AUTO_POSITION)
		tlbs.bAutoSizes		= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_AUTO_SIZES)
		tlbs.bSuppressIfNotFit	= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_SUPPRESS_IF_NO_FIT)
		tlbs.nAutoSizeStes		= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_AUTO_SIZE_STEP)
		tlbs.bCurvedBestPostion	= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_CURVED_BEST_POSITION)
		tlbs.bCurvedFallback	= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_CURVED_FALLBACK)
		tlbs.bUseAbbreviation	= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_USE_ABBREVIATION)
		tlbs.sAbbreviationExpr	= LayerInfo(nMID, nLyrID, LAYER_INFO_ABBREVIATION_EXPR)
		tlbs.bAutoCallOut		= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_AUTO_CALLOUT)
		tlbs.nLabelOrder		= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_ORDER)
	End If

	If SystemInfo(SYS_INFO_MIVERSION) >= 1700 Then
		tlbs.bPositionRetry		= LayerInfo(nMID, nLyrID, LAYER_INFO_LABEL_POS_RETRY)
		tlbs.penLine			= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_LINE_PEN)
		tlbs.nCurvedPercentOver	= LayerInfo(nMID, nLyrID, LAYER_INFO_LBL_CURVED_PERCENT_OVER)
	End If

	Exit Sub
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "tlbsGetInfo")
	Call ERRShow()

End Sub

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Business Insight
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function tlbsGetSetMapStatement(	  ByVal nMID As Integer			'Mapper Window where the layer exists
							, ByVal nLyrID As Integer		'LayerID to apply the settings to
							, tlbs As T_LABEL_SETTINGS		'The T_LABEL_SETTINGS to store information about the layer
							) As String					'Returns a string that can be used in combination with a "Set Map" Statement

Dim	sTab, sCmd As String,
	i As Integer

OnError GoTo ErrorOccured

tlbsGetSetMapStatement = ""

	Do Case LayerInfo(nMID, nLyrID, LAYER_INFO_TYPE)
		Case LAYER_INFO_TYPE_NORMAL
			'**Let's continue, label settings should work
		Case LAYER_INFO_TYPE_COSMETIC
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
		Case LAYER_INFO_TYPE_IMAGE
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
		Case LAYER_INFO_TYPE_THEMATIC
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
		Case LAYER_INFO_TYPE_GRID
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
		Case Else
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
	End Case

	sTab = LayerInfo(nMID, nLyrID, LAYER_INFO_NAME)
	If TableInfo(sTab, TAB_INFO_TYPE) IN (TAB_TYPE_IMAGE, TAB_TYPE_WMS) Then
		Exit Function
	End If

'	Set Map
'		Window window_id Layer layer_id
'		Label
'			[ Line { Simple | Arrow | None } ]
'			[ Position [ Center ] [ { Above | Below } ] [ {Left | Right } ] ]
'			[ Auto Retry { On | Off } ]
'			[ Font... ] [ Pen... ]
'			[ With label_expr ]
'			[ Parallel { On | Off } ]
'			[ Follow Path [ BestPosition { On | Off } ] [ Percent Over percent ] [ Fallback { On | Off } ] ]
'			[ Visibility { On | Off | Zoom ( min_vis, max_vis ) [ Units dist_unit ] } ]
'			[ Auto  { On | Off }  ]
'			[ Overlap  { On | Off }  ]
'			[ PartialSegments { On | Off } ]
'			[ Duplicates  { On | Off }  ]
'			[ Max [ number_of_labels ] ]
'			[ Offset offset_amount ]
'			[ Default ]
'			[ LabelAlpha alpha_value ]
'			[ AutoPosition { On | Off } ]
'			[ AutoSizes { number_font_sizes | Default } ]
'			[ AutoSizeStep percentage_value ]
'			[ SuppressIfNoFit { On | Off } ]
'			[ AutoCallout { On | Off } ]
'			[ Abbreviation { On | Off } Abbreviate with { field_expression } ]

	sCmd = tlbsGetSetMapStatementOnlyExpr(nMID, nLyrID, tlbs)
	sCmd = Right$(sCmd, Len(sCmd) - 6)

	sCmd = tlbsGetSetMapStatementNoExpr(nMID, nLyrID, tlbs)
			& sCmd

'	sCmd = " Label"
'			& " Auto " & STRINGLogicalToText(tlbs.bAutoDisplay, "On", "Off")
'			& " Auto Retry " & STRINGLogicalToText(tlbs.bPositionRetry, "On", "Off")
'
'	Do Case tlbs.nLineType
'		Case LAYER_INFO_LBL_LT_ARROW
'			sCmd = sCmd & " Line Arrow"
'		Case LAYER_INFO_LBL_LT_SIMPLE
'			sCmd = sCmd & " Line Simple"
'		Case LAYER_INFO_LBL_LT_NONE
'	End Case
'
'	sCmd = sCmd & " " & tlbs.penLine
'
'	Do Case tlbs.nPosition
'		Case LAYER_INFO_LBL_POS_TL
'			sCmd = sCmd & " Position Above Left"
'		Case LAYER_INFO_LBL_POS_TC
'			sCmd = sCmd & " Position Center Above"
'		Case LAYER_INFO_LBL_POS_TR
'			sCmd = sCmd & " Position Above Right"
'		Case LAYER_INFO_LBL_POS_CL
'			sCmd = sCmd & " Position Center Left"
'		Case LAYER_INFO_LBL_POS_CC
'			sCmd = sCmd & " Position Center"
'		Case LAYER_INFO_LBL_POS_CR
'			sCmd = sCmd & " Position Center Right"
'		Case LAYER_INFO_LBL_POS_BL
'			sCmd = sCmd & " Position Below Left"
'		Case LAYER_INFO_LBL_POS_BC
'			sCmd = sCmd & " Position Center Below"
'		Case LAYER_INFO_LBL_POS_BR
'			sCmd = sCmd & " Position Below Right"
'	End Case
'
'	sCmd = sCmd & " Offset " & tlbs.nOffset
'	sCmd = sCmd & " " & tlbs.fntLabel
'
'	If tlbs.sExpression = "" Then
'		sCmd = sCmd & " With COL1"
'	Else
'		sCmd = sCmd & " With " & tlbs.sExpression
'	End If
'
'	Do Case tlbs.nOrientation
'		Case LAYER_INFO_LABEL_ORIENT_HORIZONTAL
'			sCmd = sCmd & " Parallel Off"
'		Case	LAYER_INFO_LABEL_ORIENT_PARALLEL
'			sCmd = sCmd & " Parallel On"
'		Case	LAYER_INFO_LABEL_ORIENT_CURVED
'			sCmd = sCmd & " Follow Path"
'
'			If SystemInfo(SYS_INFO_MIVERSION) >= 1200 Then
'				sCmd = sCmd & " BestPosition " & STRINGLogicalToText(tlbs.bCurvedBestPostion, "On", "Off")
'					& " Percent Over " & tlbs.nCurvedPercentOver
'					& " Fallback " & STRINGLogicalToText(tlbs.bCurvedFallback, "On", "Off")
'			End If
'	End Case
'
'	Do Case tlbs.nVisibility
'		Case LAYER_INFO_LBL_VIS_ON
'			sCmd = sCmd & " Visibility On"
'		Case LAYER_INFO_LBL_VIS_ZOOM
'			sCmd = sCmd & " Visibility Zoom (" & tlbs.fMinZoom & ", " & tlbs.fMaxZoom & ") Units " & eye & tlbs.sZoomUnits & eye
'		Case LAYER_INFO_LBL_VIS_OFF
'			sCmd = sCmd & " Visibility Off"
'	End Case
'
'	sCmd = sCmd & " Overlap " & STRINGLogicalToText(tlbs.bAllowOverlap, "On", "Off")
'			& " PartialSegments " & STRINGLogicalToText(tlbs.bPartialSegments, "On", "Off")
'			& " Duplicates " & STRINGLogicalToText(tlbs.bAllowDuplicates, "On", "Off")
'			& " Max " & tlbs.nMaxNumber
'			& " LabelAlpha " & tlbs.nAlpha
'
'	If SystemInfo(SYS_INFO_MIVERSION) >= 1200 Then
'		sCmd = sCmd & " AutoPosition " & STRINGLogicalToText(tlbs.bAutoPosition, "On", "Off")
'				& " AutoSizes " & Maximum(tlbs.bAutoSizes, 1)
'				& " AutoSizeStep " & tlbs.nAutoSizeStes
'				& " SuppressIfNoFit " & STRINGLogicalToText(tlbs.bSuppressIfNotFit, "On", "Off")
'				& " AutoCallout " & STRINGLogicalToText(tlbs.bAutoCallOut, "On", "Off")
'
'		If tlbs.sAbbreviationExpr = "" Then
'			sCmd = sCmd & " Abbreviation " & STRINGLogicalToText(tlbs.bUseAbbreviation, "On", "Off")
'					& " Abbreviate with COL1"
'		Else
'			sCmd = sCmd & " Abbreviation " & STRINGLogicalToText(tlbs.bUseAbbreviation, "On", "Off")
'					& " Abbreviate with " & tlbs.sAbbreviationExpr
'		End If
'
'		'tlbs.nLabelOrder - no way to set this?
'	End If

	tlbsGetSetMapStatement = sCmd

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "tlbsGetSetMapStatement")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Business Insight
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function tlbsGetSetMapStatementNoExpr(	  ByVal nMID As Integer			'Mapper Window where the layer exists
								, ByVal nLyrID As Integer		'LayerID to apply the settings to
								, tlbs As T_LABEL_SETTINGS		'The T_LABEL_SETTINGS to store information about the layer
								) As String					'Returns a string that can be used in combination with a "Set Map" Statement

Dim	sTab, sCmd As String,
	i As Integer

OnError GoTo ErrorOccured

tlbsGetSetMapStatementNoExpr = ""

	Do Case LayerInfo(nMID, nLyrID, LAYER_INFO_TYPE)
		Case LAYER_INFO_TYPE_NORMAL
			'**Let's continue, label settings should work
		Case LAYER_INFO_TYPE_COSMETIC
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
		Case LAYER_INFO_TYPE_IMAGE
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
		Case LAYER_INFO_TYPE_THEMATIC
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
		Case LAYER_INFO_TYPE_GRID
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
		Case Else
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
	End Case

	sTab = LayerInfo(nMID, nLyrID, LAYER_INFO_NAME)
	If TableInfo(sTab, TAB_INFO_TYPE) IN (TAB_TYPE_IMAGE, TAB_TYPE_WMS) Then
		Exit Function
	End If

'	Set Map
'		Window window_id Layer layer_id
'		Label
'			[ Line { Simple | Arrow | None } ]
'			[ Position [ Center ] [ { Above | Below } ] [ {Left | Right } ] ]
'			[ Auto Retry { On | Off } ]
'			[ Font... ] [ Pen... ]
'			[ With label_expr ] [ Parallel { On | Off } ]
'			[ Follow Path [ BestPosition { On | Off } ] [ Percent Over percent ] [ Fallback { On | Off } ] ]
'			[ Visibility { On | Off | Zoom ( min_vis, max_vis ) [ Units dist_unit ] } ]
'			[ Auto  { On | Off }  ]
'			[ Overlap  { On | Off }  ]
'			[ PartialSegments { On | Off } ]
'			[ Duplicates  { On | Off }  ]
'			[ Max [ number_of_labels ] ]
'			[ Offset offset_amount ]
'			[ Default ]
'			[ LabelAlpha alpha_value ]
'			[ AutoPosition { On | Off } ]
'			[ AutoSizes { number_font_sizes | Default } ]
'			[ AutoSizeStep percentage_value ]
'			[ SuppressIfNoFit { On | Off } ]
'			[ AutoCallout { On | Off } ]
'			[ Abbreviation { On | Off } Abbreviate with { field_expression } ]

	sCmd = " Label"
			& " Auto " & STRINGLogicalToText(tlbs.bAutoDisplay, "On", "Off")
			& " Auto Retry " & STRINGLogicalToText(tlbs.bPositionRetry, "On", "Off")

	Do Case tlbs.nLineType
		Case LAYER_INFO_LBL_LT_ARROW
			sCmd = sCmd & " Line Arrow"
		Case LAYER_INFO_LBL_LT_SIMPLE
			sCmd = sCmd & " Line Simple"
		Case LAYER_INFO_LBL_LT_NONE
	End Case

	sCmd = sCmd & " " & tlbs.penLine

	Do Case tlbs.nPosition
		Case LAYER_INFO_LBL_POS_TL
			sCmd = sCmd & " Position Above Left"
		Case LAYER_INFO_LBL_POS_TC
			sCmd = sCmd & " Position Center Above"
		Case LAYER_INFO_LBL_POS_TR
			sCmd = sCmd & " Position Above Right"
		Case LAYER_INFO_LBL_POS_CL
			sCmd = sCmd & " Position Center Left"
		Case LAYER_INFO_LBL_POS_CC
			sCmd = sCmd & " Position Center"
		Case LAYER_INFO_LBL_POS_CR
			sCmd = sCmd & " Position Center Right"
		Case LAYER_INFO_LBL_POS_BL
			sCmd = sCmd & " Position Below Left"
		Case LAYER_INFO_LBL_POS_BC
			sCmd = sCmd & " Position Center Below"
		Case LAYER_INFO_LBL_POS_BR
			sCmd = sCmd & " Position Below Right"
	End Case

	sCmd = sCmd & " Offset " & tlbs.nOffset
	sCmd = sCmd & " " & tlbs.fntLabel

'	If tlbs.sExpression = "" Then
'		sCmd = sCmd & " With COL1"
'	Else
'		sCmd = sCmd & " With " & tlbs.sExpression
'	End If

	Do Case tlbs.nOrientation
		Case LAYER_INFO_LABEL_ORIENT_HORIZONTAL
			sCmd = sCmd & " Parallel Off"
		Case	LAYER_INFO_LABEL_ORIENT_PARALLEL
			sCmd = sCmd & " Parallel On"
		Case	LAYER_INFO_LABEL_ORIENT_CURVED
			sCmd = sCmd & " Follow Path"

			If SystemInfo(SYS_INFO_MIVERSION) >= 1200 Then
				sCmd = sCmd & " BestPosition " & STRINGLogicalToText(tlbs.bCurvedBestPostion, "On", "Off")
					& " Percent Over " & tlbs.nCurvedPercentOver
					& " Fallback " & STRINGLogicalToText(tlbs.bCurvedFallback, "On", "Off")
			End If
	End Case

	Do Case tlbs.nVisibility
		Case LAYER_INFO_LBL_VIS_ON
			sCmd = sCmd & " Visibility On"
		Case LAYER_INFO_LBL_VIS_ZOOM
			sCmd = sCmd & " Visibility Zoom (" & tlbs.fMinZoom & ", " & tlbs.fMaxZoom & ") Units " & eye & tlbs.sZoomUnits & eye
		Case LAYER_INFO_LBL_VIS_OFF
			sCmd = sCmd & " Visibility Off"
	End Case

	sCmd = sCmd & " Overlap " & STRINGLogicalToText(tlbs.bAllowOverlap, "On", "Off")
			& " PartialSegments " & STRINGLogicalToText(tlbs.bPartialSegments, "On", "Off")
			& " Duplicates " & STRINGLogicalToText(tlbs.bAllowDuplicates, "On", "Off")
			& " Max " & tlbs.nMaxNumber
			& " LabelAlpha " & tlbs.nAlpha

	If SystemInfo(SYS_INFO_MIVERSION) >= 1200 Then
		sCmd = sCmd & " AutoPosition " & STRINGLogicalToText(tlbs.bAutoPosition, "On", "Off")
				& " AutoSizes " & Maximum(tlbs.bAutoSizes, 1)
				& " AutoSizeStep " & tlbs.nAutoSizeStes
				& " SuppressIfNoFit " & STRINGLogicalToText(tlbs.bSuppressIfNotFit, "On", "Off")
				& " AutoCallout " & STRINGLogicalToText(tlbs.bAutoCallOut, "On", "Off")

'		If tlbs.sAbbreviationExpr = "" Then
'			sCmd = sCmd & " Abbreviation " & STRINGLogicalToText(tlbs.bUseAbbreviation, "On", "Off")
'					& " Abbreviate with COL1"
'		Else
'			sCmd = sCmd & " Abbreviation " & STRINGLogicalToText(tlbs.bUseAbbreviation, "On", "Off")
'					& " Abbreviate with " & tlbs.sAbbreviationExpr
'		End If

		'tlbs.nLabelOrder - no way to set this?
	End If

	tlbsGetSetMapStatementNoExpr = sCmd

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "tlbsGetSetMapStatementNoExpr")
	Call ERRShow()

End Function

'**********************************************************************************************''
'Created by Peter Horsbøll Møller, Pitney Bowes Business Insight
'Parameters:
'	:
'Return value:
'
'**********************************************************************************************''
Function tlbsGetSetMapStatementOnlyExpr(  ByVal nMID As Integer			'Mapper Window where the layer exists
								, ByVal nLyrID As Integer		'LayerID to apply the settings to
								, tlbs As T_LABEL_SETTINGS		'The T_LABEL_SETTINGS to store information about the layer
								) As String					'Returns a string that can be used in combination with a "Set Map" Statement

Dim	sTab, sCmd As String,
	i As Integer

OnError GoTo ErrorOccured

tlbsGetSetMapStatementOnlyExpr = ""

	Do Case LayerInfo(nMID, nLyrID, LAYER_INFO_TYPE)
		Case LAYER_INFO_TYPE_NORMAL
			'**Let's continue, label settings should work
		Case LAYER_INFO_TYPE_COSMETIC
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
		Case LAYER_INFO_TYPE_IMAGE
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
		Case LAYER_INFO_TYPE_THEMATIC
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
		Case LAYER_INFO_TYPE_GRID
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
		Case Else
			'**Let's drop it, label settings does not work with this layer type
			Exit Function
	End Case

	sTab = LayerInfo(nMID, nLyrID, LAYER_INFO_NAME)
	If TableInfo(sTab, TAB_INFO_TYPE) IN (TAB_TYPE_IMAGE, TAB_TYPE_WMS) Then
		Exit Function
	End If

'	Set Map
'		Window window_id Layer layer_id
'		Label
'			[ Line { Simple | Arrow | None } ]
'			[ Position [ Center ] [ { Above | Below } ] [ {Left | Right } ] ]
'			[ Auto Retry { On | Off } ]
'			[ Font... ] [ Pen... ]
'			[ With label_expr ] [ Parallel { On | Off } ]
'			[ Follow Path [ BestPosition { On | Off } ] [ Percent Over percent ] [ Fallback { On | Off } ] ]
'			[ Visibility { On | Off | Zoom ( min_vis, max_vis ) [ Units dist_unit ] } ]
'			[ Auto  { On | Off }  ]
'			[ Overlap  { On | Off }  ]
'			[ PartialSegments { On | Off } ]
'			[ Duplicates  { On | Off }  ]
'			[ Max [ number_of_labels ] ]
'			[ Offset offset_amount ]
'			[ Default ]
'			[ LabelAlpha alpha_value ]
'			[ AutoPosition { On | Off } ]
'			[ AutoSizes { number_font_sizes | Default } ]
'			[ AutoSizeStep percentage_value ]
'			[ SuppressIfNoFit { On | Off } ]
'			[ AutoCallout { On | Off } ]
'			[ Abbreviation { On | Off } Abbreviate with { field_expression } ]

	sCmd = " Label"
'			& " Auto " & STRINGLogicalToText(tlbs.bAutoDisplay, "On", "Off")
'			& " Auto Retry " & STRINGLogicalToText(tlbs.bPositionRetry, "On", "Off")

'	Do Case tlbs.nLineType
'		Case LAYER_INFO_LBL_LT_ARROW
'			sCmd = sCmd & " Line Arrow"
'		Case LAYER_INFO_LBL_LT_SIMPLE
'			sCmd = sCmd & " Line Simple"
'		Case LAYER_INFO_LBL_LT_NONE
'	End Case

'	sCmd = sCmd & " " & tlbs.penLine

'	Do Case tlbs.nPosition
'		Case LAYER_INFO_LBL_POS_TL
'			sCmd = sCmd & " Position Above Left"
'		Case LAYER_INFO_LBL_POS_TC
'			sCmd = sCmd & " Position Center Above"
'		Case LAYER_INFO_LBL_POS_TR
'			sCmd = sCmd & " Position Above Right"
'		Case LAYER_INFO_LBL_POS_CL
'			sCmd = sCmd & " Position Center Left"
'		Case LAYER_INFO_LBL_POS_CC
'			sCmd = sCmd & " Position Center"
'		Case LAYER_INFO_LBL_POS_CR
'			sCmd = sCmd & " Position Center Right"
'		Case LAYER_INFO_LBL_POS_BL
'			sCmd = sCmd & " Position Below Left"
'		Case LAYER_INFO_LBL_POS_BC
'			sCmd = sCmd & " Position Center Below"
'		Case LAYER_INFO_LBL_POS_BR
'			sCmd = sCmd & " Position Below Right"
'	End Case

'	sCmd = sCmd & " Offset " & tlbs.nOffset
'	sCmd = sCmd & " " & tlbs.fntLabel

	If tlbs.sExpression = "" Then
		sCmd = sCmd & " With COL1"
	Else
		If tlbs.sExpression Like "(" Then
			'**Contains an expression and not just a column name
			sCmd = sCmd & " With " & tlbs.sExpression
		ElseIf tlbs.sExpression Like " " Then
			'**Contains an expression and not just a column name
			sCmd = sCmd & " With " & tlbs.sExpression
		ElseIf tlbs.sExpression Like "+" Then
			'**Contains an expression and not just a column name
			sCmd = sCmd & " With " & tlbs.sExpression
		ElseIf tlbs.sExpression Like "&" Then
			'**Contains an expression and not just a column name
			sCmd = sCmd & " With " & tlbs.sExpression
		ElseIf tlbs.sExpression Like Chr$(34) Then
			'**Contains an expression and not just a column name
			sCmd = sCmd & " With " & tlbs.sExpression
		Else
			'**Probably just a column name
			If COLExists(LayerInfo(nMID, nLyrID, LAYER_INFO_NAME), tlbs.sExpression) Then
				sCmd = sCmd & " With " & tlbs.sExpression
			Else
				sCmd = sCmd & " With COL1"
			End If
		End If
	End If

'	Do Case tlbs.nOrientation
'		Case LAYER_INFO_LABEL_ORIENT_HORIZONTAL
'			sCmd = sCmd & " Parallel Off"
'		Case	LAYER_INFO_LABEL_ORIENT_PARALLEL
'			sCmd = sCmd & " Parallel On"
'		Case	LAYER_INFO_LABEL_ORIENT_CURVED
'			sCmd = sCmd & " Follow Path"

'			If SystemInfo(SYS_INFO_MIVERSION) >= 1200 Then
'				sCmd = sCmd & " BestPosition " & STRINGLogicalToText(tlbs.bCurvedBestPostion, "On", "Off")
'					& " Percent Over " & tlbs.nCurvedPercentOver
'					& " Fallback " & STRINGLogicalToText(tlbs.bCurvedFallback, "On", "Off")
'			End If
'	End Case

'	Do Case tlbs.nVisibility
'		Case LAYER_INFO_LBL_VIS_ON
'			sCmd = sCmd & " Visibility On"
'		Case LAYER_INFO_LBL_VIS_ZOOM
'			sCmd = sCmd & " Visibility Zoom (" & tlbs.fMinZoom & ", " & tlbs.fMaxZoom & ") Units " & eye & tlbs.sZoomUnits & eye
'		Case LAYER_INFO_LBL_VIS_OFF
'			sCmd = sCmd & " Visibility Off"
'	End Case
'
'	sCmd = sCmd & " Overlap " & STRINGLogicalToText(tlbs.bAllowOverlap, "On", "Off")
'			& " PartialSegments " & STRINGLogicalToText(tlbs.bPartialSegments, "On", "Off")
'			& " Duplicates " & STRINGLogicalToText(tlbs.bAllowDuplicates, "On", "Off")
'			& " Max " & tlbs.nMaxNumber
'			& " LabelAlpha " & tlbs.nAlpha

	If SystemInfo(SYS_INFO_MIVERSION) >= 1200 Then
'		sCmd = sCmd & " AutoPosition " & STRINGLogicalToText(tlbs.bAutoPosition, "On", "Off")
'				& " AutoSizes " & Maximum(tlbs.bAutoSizes, 1)
'				& " AutoSizeStep " & tlbs.nAutoSizeStes
'				& " SuppressIfNoFit " & STRINGLogicalToText(tlbs.bSuppressIfNotFit, "On", "Off")
'				& " AutoCallout " & STRINGLogicalToText(tlbs.bAutoCallOut, "On", "Off")

		sCmd = sCmd & " Abbreviation " & STRINGLogicalToText(tlbs.bUseAbbreviation, "On", "Off")
		If tlbs.sAbbreviationExpr = "" Then
			sCmd = sCmd & " Abbreviate with COL1"
		Else
			If tlbs.sAbbreviationExpr Like "(" Then
				'**Contains an expression and not just a column name
				sCmd = sCmd & " Abbreviate With " & tlbs.sAbbreviationExpr
			ElseIf tlbs.sAbbreviationExpr Like " " Then
				'**Contains an expression and not just a column name
				sCmd = sCmd & " Abbreviate With " & tlbs.sAbbreviationExpr
			ElseIf tlbs.sAbbreviationExpr Like "+" Then
				'**Contains an expression and not just a column name
				sCmd = sCmd & " Abbreviate With " & tlbs.sAbbreviationExpr
			ElseIf tlbs.sAbbreviationExpr Like "&" Then
				'**Contains an expression and not just a column name
				sCmd = sCmd & " Abbreviate With " & tlbs.sAbbreviationExpr
			ElseIf tlbs.sAbbreviationExpr Like Chr$(34) Then
				'**Contains an expression and not just a column name
				sCmd = sCmd & " Abbreviate With " & tlbs.sAbbreviationExpr
			Else
				'**Probably just a column name
				If COLExists(LayerInfo(nMID, nLyrID, LAYER_INFO_NAME), tlbs.sAbbreviationExpr) Then
					sCmd = sCmd & " Abbreviate With " & tlbs.sAbbreviationExpr
				Else
					sCmd = sCmd & " Abbreviate With COL1"
				End If
			End If
		End If

		'tlbs.nLabelOrder - no way to set this?
	End If

	tlbsGetSetMapStatementOnlyExpr = sCmd

	Exit Function
'-------------------------
ErrorOccured:
	Call ERRCreate(Err(), Error$(), "tlbsGetSetMapStatementOnlyExpr")
	Call ERRShow()

End Function